{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/wounded990/Basher/blob/main/Case%20study\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NwhJOozykbV_"
      },
      "source": [
        "(Case Study)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j-aUsNf4kbWG"
      },
      "outputs": [],
      "source": [
        "# import statements\n",
        "import pandas as pd\n",
        "import seaborn as sns\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "awR7ZLEkkbWI"
      },
      "outputs": [],
      "source": [
        "data = pd.read_csv('laptops.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JvaZSSeMkbWI",
        "outputId": "f84e294b-4e45-4117-c515-c7afb4a571af",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    brand           laptop_name  display_size        processor_type  \\\n",
              "0      HP  Notebook 14-df0008nx          14.0   Intel Celeron N4000   \n",
              "1  Lenovo    IdeaPad 330S-14IKB          14.0   Intel Core i5-8250U   \n",
              "2  Huawei      MateBook D Volta          14.0   Intel Core i5-8250U   \n",
              "3    Dell      Inspiron 15 3567          15.6   Intel Core i3-7020U   \n",
              "4    Asus    VivoBook 15 X510UR          15.6   Intel Core i7-8550U   \n",
              "\n",
              "                  graphics_card     disk_space  discount_price  old_price  \\\n",
              "0         Intel HD Graphics 600   64 GB (eMMC)          1259.0     1259.0   \n",
              "1        Intel UHD Graphics 620       1 TB HDD          1849.0     2099.0   \n",
              "2   NVIDIA GeForce MX150 (2 GB)     256 GB SSD          2999.0     3799.0   \n",
              "3         Intel HD Graphics 620       1 TB HDD          1849.0     1849.0   \n",
              "4   NVIDIA GeForce 930MX (2 GB)       1 TB HDD          2499.0     3149.0   \n",
              "\n",
              "  ratings_5max  \n",
              "0        0 / 5  \n",
              "1      3.3 / 5  \n",
              "2        0 / 5  \n",
              "3        0 / 5  \n",
              "4        0 / 5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6d817b98-119b-477f-b433-e30ede162a7d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>brand</th>\n",
              "      <th>laptop_name</th>\n",
              "      <th>display_size</th>\n",
              "      <th>processor_type</th>\n",
              "      <th>graphics_card</th>\n",
              "      <th>disk_space</th>\n",
              "      <th>discount_price</th>\n",
              "      <th>old_price</th>\n",
              "      <th>ratings_5max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>HP</td>\n",
              "      <td>Notebook 14-df0008nx</td>\n",
              "      <td>14.0</td>\n",
              "      <td>Intel Celeron N4000</td>\n",
              "      <td>Intel HD Graphics 600</td>\n",
              "      <td>64 GB (eMMC)</td>\n",
              "      <td>1259.0</td>\n",
              "      <td>1259.0</td>\n",
              "      <td>0 / 5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Lenovo</td>\n",
              "      <td>IdeaPad 330S-14IKB</td>\n",
              "      <td>14.0</td>\n",
              "      <td>Intel Core i5-8250U</td>\n",
              "      <td>Intel UHD Graphics 620</td>\n",
              "      <td>1 TB HDD</td>\n",
              "      <td>1849.0</td>\n",
              "      <td>2099.0</td>\n",
              "      <td>3.3 / 5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Huawei</td>\n",
              "      <td>MateBook D Volta</td>\n",
              "      <td>14.0</td>\n",
              "      <td>Intel Core i5-8250U</td>\n",
              "      <td>NVIDIA GeForce MX150 (2 GB)</td>\n",
              "      <td>256 GB SSD</td>\n",
              "      <td>2999.0</td>\n",
              "      <td>3799.0</td>\n",
              "      <td>0 / 5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Dell</td>\n",
              "      <td>Inspiron 15 3567</td>\n",
              "      <td>15.6</td>\n",
              "      <td>Intel Core i3-7020U</td>\n",
              "      <td>Intel HD Graphics 620</td>\n",
              "      <td>1 TB HDD</td>\n",
              "      <td>1849.0</td>\n",
              "      <td>1849.0</td>\n",
              "      <td>0 / 5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Asus</td>\n",
              "      <td>VivoBook 15 X510UR</td>\n",
              "      <td>15.6</td>\n",
              "      <td>Intel Core i7-8550U</td>\n",
              "      <td>NVIDIA GeForce 930MX (2 GB)</td>\n",
              "      <td>1 TB HDD</td>\n",
              "      <td>2499.0</td>\n",
              "      <td>3149.0</td>\n",
              "      <td>0 / 5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d817b98-119b-477f-b433-e30ede162a7d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6d817b98-119b-477f-b433-e30ede162a7d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6d817b98-119b-477f-b433-e30ede162a7d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A4MPrtxnkbWJ",
        "outputId": "ef4ce297-c911-45c4-984a-23624a4896b4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 205 entries, 0 to 204\n",
            "Data columns (total 9 columns):\n",
            " #   Column          Non-Null Count  Dtype  \n",
            "---  ------          --------------  -----  \n",
            " 0   brand           205 non-null    object \n",
            " 1   laptop_name     204 non-null    object \n",
            " 2   display_size    205 non-null    float64\n",
            " 3   processor_type  205 non-null    object \n",
            " 4   graphics_card   205 non-null    object \n",
            " 5   disk_space      205 non-null    object \n",
            " 6   discount_price  205 non-null    float64\n",
            " 7   old_price       205 non-null    float64\n",
            " 8   ratings_5max    205 non-null    object \n",
            "dtypes: float64(3), object(6)\n",
            "memory usage: 14.5+ KB\n"
          ]
        }
      ],
      "source": [
        "data.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9B0qBPLDkbWM",
        "outputId": "015b7628-f225-4b4c-9f29-19a29f649525",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "brand               9\n",
              "laptop_name       134\n",
              "display_size       11\n",
              "processor_type     26\n",
              "graphics_card      52\n",
              "disk_space         30\n",
              "discount_price    124\n",
              "old_price         104\n",
              "ratings_5max       16\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "data.nunique()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1. How many different laptop brands are there?\n"
      ],
      "metadata": {
        "id": "DjR4TMFmqtCe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "lIuOR4jAqxF5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2. What are the names and prices of the most and least expensive laptops?"
      ],
      "metadata": {
        "id": "Ow3QIR4hq8TR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Sort by old_price. Then, select the first and last rows to get the least and most expensive rows."
      ],
      "metadata": {
        "id": "VdzP-fVLrC1B"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 3. How are the laptop prices distributed?"
      ],
      "metadata": {
        "id": "oJaUoNllrMu_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "jwULyNuPrORE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 4. What are the min, max, and mean display sizes?"
      ],
      "metadata": {
        "id": "BgogMPd1rT-m"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "wLN_DSGcrVuE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 5. What is the average price for each laptop brand?"
      ],
      "metadata": {
        "id": "7zWDniG4ra0n"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Group by brand and calculate average price"
      ],
      "metadata": {
        "id": "Wd089vFurcLH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 6. What is the average laptop price for each processor brand?"
      ],
      "metadata": {
        "id": "m7kBGfMfrguE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Examine the unique values in the processor_type column\n",
        "\n",
        "# Extract the processor brand name from the processor_type column\n",
        "\n",
        "# Group by brand and get brand with highest price"
      ],
      "metadata": {
        "id": "ww49rmdOrmCX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 7. What are the average ratings for each laptop brand?"
      ],
      "metadata": {
        "id": "ja2c6AIHrwA7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Examine the ratings_5max column\n",
        "\n",
        "# Convert all ratings to a float value that's rounded to 1 decimal place.\n",
        "\n",
        "# Replace 0 values with NaN so they won't be included in aggregate functions\n",
        "\n",
        "# Drop the old column\n",
        "\n",
        "# Examine the new ratings column\n",
        "\n",
        "# Calculate the average ratings for each laptop brand"
      ],
      "metadata": {
        "id": "Q3DOWTP0rxP1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 8. How many laptops have a discount price?"
      ],
      "metadata": {
        "id": "xrOmAvDMr5I7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "7aTMNHQ6r6i_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 9. How is display size related to price?"
      ],
      "metadata": {
        "id": "GVZl3KcAr_K1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "3IlE3SZzsASY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 10. Use Scikit-learn to create and use a linear regression model to predict rating or price. \n",
        "Hint: use the Chapter 10 example as a guide as you create this model. (https://colab.research.google.com/github/plthomps/ITCS3162-Data-Mining/blob/main/ch10_examples.ipynb)\n",
        "\n",
        "Our steps are: \n",
        "1) Import necessary libraries \n",
        "2) split the dataset into train and test \n",
        "3) create model from the training dataset \n",
        "4) validate model with test dataset \n",
        "5) if model is valid, predict with it\n",
        "\n",
        "Model the linear relationship between the difference of discount_price and old_price. Use Chapter 10 Notebook as a reference: https://colab.research.google.com/github/plthomps/ITCS3162-Data-Mining/blob/main/ch10_examples.ipynb\n"
      ],
      "metadata": {
        "id": "Ktm8DumBsGuO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Use sklearn module to create, validate, and use a linear regression model\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "\n",
        "# create the model from the training dataset\n",
        "\n",
        "# validate the model with the test dataset\n",
        "\n",
        "# use the model to make predictions\n",
        "\n",
        "# put predicted values in a frame\n",
        "\n",
        "# combine the test data and the predicted data\n",
        "\n",
        "# plot the relationship (if there is one) in a meaningful way"
      ],
      "metadata": {
        "id": "zIDpnxSssJXv"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.5"
    },
    "colab": {
      "name": "Copy of ChallengeLabDataViz.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}